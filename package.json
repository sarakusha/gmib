{
  "name": "gmib",
  "version": "4.4.0",
  "description": "Nata-Info gmib tool",
  "private": true,
  "engines": {
    "node": ">=v18.13",
    "npm": ">=8.1"
  },
  "keywords": [
    "nata-info",
    "nibus",
    "sarakusha"
  ],
  "license": "MIT",
  "author": "Andrei Sarakeev <avs@nata-info.ru>",
  "main": "packages/main/dist/index.cjs",
  "repository": "https://github.com/sarakusha/gmib.git",
  "scripts": {
    "rsync:ubuntu": "rsync -avz --delete --exclude=.git --exclude=packages/preload/*.d.ts --include=.gitignore --filter=':- .gitignore' . user@192.168.2.40:~/src/gmib",
    "rsync:windows": "rsync --port 8730 -avz --delete --exclude=.git --include=.gitignore --filter=':- .gitignore' . sarakusha@192.168.2.40:/mnt/c/Users/sarakusha/src/gmib",
    "build": "cross-env MODE=production NODE_ENV=production npm run build:types && cross-env MODE=production NODE_ENV=production run-p build:main build:preload build:renderer",
    "build:main": "cd ./packages/main && vite build",
    "build:preload": "run-p build:preload:*",
    "build:preloadlib": "cd ./packages/preload && vite build",
    "build:preload:gmib": "cross-env LIB_NAME=gmib npm run build:preloadlib",
    "build:preload:remote": "cross-env LIB_NAME=remote npm run build:preloadlib",
    "build:preload:player": "cross-env LIB_NAME=player npm run build:preloadlib",
    "build:types": "run-p build:types:*",
    "build:types:gmib": "dts-cb -i packages/preload/gmib/tsconfig.json -o packages/preload/gmibInMainWorld.d.ts",
    "build:types:player": "dts-cb -i packages/preload/player/tsconfig.json -o packages/preload/playerInMainWorld.d.ts",
    "build:renderer": "cd ./packages/renderer && vite build",
    "compile": "cross-env NODE_ENV=production electron-builder build --config .electron-builder.config.js --dir",
    "test": "run-s test:*",
    "test:main": "vitest run -r packages/main --passWithNoTests",
    "test:preload": "vitest run -r packages/preload --passWithNoTests",
    "test:renderer": "vitest run -r packages/renderer --passWithNoTests",
    "test:e2e": "npm run build && vitest run",
    "test:spelling": "cspell lint -c cspell.json",
    "WATCH:gmib": "cross-env LIB_NAME=gmib node scripts/watch.mjs",
    "watch:player": "cross-env LIB_NAME=player node scripts/watch.mjs",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"packages/{main/src,common,{preload,renderer}/{common,gmib,player},preload/remote}/**/*.ts\" --write",
    "fix:lint": "eslint -c .eslintrc-prod.js packages/{main/src,common,{preload,renderer}/{common,gmib,player},preload/remote} --ext js,ts,tsx,md,mdx --fix",
    "typecheck:main": "tsc --noEmit -p packages/main/tsconfig.json",
    "typecheck:preload": "tsc --noEmit -p packages/preload/tsconfig.json",
    "typecheck:renderer": "tsc --noEmit -p packages/renderer/tsconfig.json",
    "typecheck": "run-p typecheck:*",
    "release": "run-script-os",
    "release:darwin": "electron-builder --config .electron-builder.config.js -p always -m --x64",
    "release:win32": "electron-builder --config .electron-builder.config.js -p always -w --x64",
    "release:linux": "electron-builder --config .electron-builder.config.js -p always -l --x64",
    "dist": "run-script-os",
    "dist:darwin": "cross-env NODE_ENV=production electron-builder --config .electron-builder.config.js -m --x64",
    "dist:win32": "cross-env NODE_ENV=production electron-builder --config .electron-builder.config.js -w --x64",
    "dist:linux": "cross-env NODE_ENV=production electron-builder --config .electron-builder.config.js -l --x64",
    "download-ffmpeg": "run-script-os",
    "download-ffmpeg:darwin": "mkdirp ffmpeg/darwin-x64 && cd ffmpeg/darwin-x64 && wget https://github.com/mifi/ffmpeg-build-script/releases/latest/download/ffmpeg -O ffmpeg && wget https://github.com/mifi/ffmpeg-build-script/releases/latest/download/ffprobe -O ffprobe && chmod +x ffmpeg && chmod +x ffprobe",
    "download-ffmpeg:linux": "mkdirp ffmpeg/linux-x64 && cd ffmpeg/linux-x64 && wget $(curl https://api.github.com/repos/mifi/ffmpeg-builds/releases/latest | jq -r '.assets[] | select(.browser_download_url | contains(\"linux-x64\")) | .browser_download_url') -nd --no-parent -A 'linux-x64-*.tar.xz' -O ffmpeg.tar.xz && tar xvf ffmpeg.tar.xz --wildcards 'ffmpeg-*-amd64-static/ffmpeg' 'ffmpeg-*-amd64-static/ffprobe' --strip-components=1",
    "download-ffmpeg:win32": "mkdirp ffmpeg/win32-x64 && cd ffmpeg/win32-x64 && npx --yes download-cli https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.7z --out . --filename ffmpeg.7z && 7z x ffmpeg.7z && npx shx --yes mv ffmpeg-*-essentials_build/bin/ffmpeg.exe ./ && npx shx mv ffmpeg-*-essentials_build/bin/ffprobe.exe ./",
    "vite:clean": "rimraf node_modules/.vite && rimraf packages/{main,preload,renderer,playerPreload}/dist/*",
    "postinstall": "electron-builder install-app-deps && cross-env ELECTRON_RUN_AS_NODE=1 npx --no-install electron ./scripts/update-electron-vendors.js",
    "version": "commit-and-tag-version",
    "external": "echo 'module.exports = [\"electron\", \"debug\"' > external.js && npm list --omit=dev --depth=3 -p| grep node_modules | sed 's#^.*node_modules/\\(.*\\)$#, \"\\1\"#' | sort | uniq -u >> external.js && echo '];' >> external.js"
  },
  "devDependencies": {
    "@emotion/babel-plugin": "^11.10.2",
    "@emotion/react": "^11.10.4",
    "@emotion/styled": "^11.10.4",
    "@mdx-js/react": "^2.1.3",
    "@mdx-js/rollup": "^2.1.3",
    "@mui/icons-material": "^5.10.3",
    "@mui/lab": "^5.0.0-alpha.97",
    "@mui/material": "^5.10.3",
    "@reduxjs/toolkit": "^1.8.5",
    "@rollup/plugin-commonjs": "^25.0.0",
    "@rollup/plugin-node-resolve": "^15.0.1",
    "@rollup/plugin-typescript": "^11.0.0",
    "@sarakusha/ebml": "file:.yalc/@sarakusha/ebml",
    "@sarakusha/material-ui-chip-input": "^2.0.1",
    "@types/color-hash": "^1.0.2",
    "@types/cors": "^2.8.12",
    "@types/dom-mediacapture-transform": "^0.1.4",
    "@types/dom-webcodecs": "^0.1.4",
    "@types/ebml": "^3.0.2",
    "@types/express": "^4.17.13",
    "@types/formidable": "^2.0.5",
    "@types/lodash": "^4.14.184",
    "@types/node": "^18.7.14",
    "@types/offscreencanvas": "^2019.7.0",
    "@types/react": "^18.0.18",
    "@types/react-dom": "^18.0.6",
    "@types/react-virtualized-auto-sizer": "^1.0.1",
    "@types/react-window": "^1.8.5",
    "@types/sanitize-html": "^2.6.2",
    "@types/semver": "^7.5.0",
    "@types/sjcl": "^1.0.30",
    "@types/smpte-timecode": "^1.2.1",
    "@types/sqlite3": "^3.1.8",
    "@types/suncalc": "^1.8.1",
    "@types/tail": "^2.2.1",
    "@types/tcp-port-used": "^1.0.1",
    "@types/valid-url": "^1.0.3",
    "@types/web": "^0.0.114",
    "@types/ws": "^8.5.3",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "@vitejs/plugin-react": "^4.0.0",
    "commit-and-tag-version": "^11.0.0",
    "cross-env": "^7.0.3",
    "cspell": "^7.0.1",
    "dnd-core": "^16.0.1",
    "dts-for-context-bridge": "^0.7.1",
    "electron": "^26.0.0",
    "electron-builder": "^24.4.0",
    "electron-devtools-installer": "^3.2.0",
    "eslint": "^8.23.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-define-config": "^1.14.0",
    "eslint-import-resolver-typescript": "^3.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jsx-a11y": "^6.6.1",
    "eslint-plugin-mdx": "^2.0.5",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-react": "^7.31.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-unused-imports": "^3.0.0",
    "formik": "^2.2.9",
    "happy-dom": "^8.2.6",
    "highcharts": "^10.2.1",
    "highcharts-react-official": "^3.1.0",
    "hotkeys-js": "^3.9.5",
    "iput": "file:.yalc/iput",
    "material-ui-popup-state": "^5.0.4",
    "notistack": "^2.0.5",
    "npm-run-all": "^4.1.5",
    "playwright": "^1.25.1",
    "prettier": "^2.7.1",
    "prettier-airbnb-config": "^1.0.0",
    "react": "^18.2.0",
    "react-dnd": "^16.0.1",
    "react-dnd-html5-backend": "^16.0.1",
    "react-dom": "^18.2.0",
    "react-error-boundary": "^4.0.4",
    "react-imask": "^6.4.2",
    "react-redux": "^8.0.2",
    "react-resize-detector": "^9.1.0",
    "react-transition-group": "^4.4.5",
    "rollup-plugin-cleanup": "^3.2.1",
    "rollup-plugin-swc": "^0.2.1",
    "rollup-plugin-visualizer": "^5.8.3",
    "run-script-os": "^1.1.6",
    "suncalc": "^1.9.0",
    "typeface-roboto": "^1.1.13",
    "typescript": "^5.1.3",
    "vite": "^4.0.4",
    "vite-plugin-checker": "^0.6.0",
    "vite-plugin-electron": "^0.12.0",
    "vitest": "^0.28.5"
  },
  "dependencies": {
    "@homebridge/ciao": "^1.1.5",
    "@nibus/core": "^4.0.1",
    "@nibus/detection": "^4.0.1",
    "@nibus/mibs": "^4.0.0",
    "@nibus/service": "file:.yalc/@nibus/service",
    "@novastar/codec": "^2.0.0-alpha.9",
    "@novastar/native": "^2.0.0-alpha.10",
    "@novastar/net": "^2.0.0-alpha.9",
    "@novastar/screen": "^2.0.0-alpha.10",
    "@novastar/serial": "^2.0.0-alpha.10",
    "@sarakusha/tssrp6a": "^3.0.0",
    "ajv": "^8.11.0",
    "body-parser": "^1.20.0",
    "bonjour-hap": "^3.6.3",
    "color-hash": "^2.0.1",
    "cors": "^2.8.5",
    "dayjs": "^1.11.5",
    "debug": "^4.3.4",
    "electron-extension-installer": "^1.2.0",
    "electron-log": "^4.4.8",
    "electron-store": "^8.1.0",
    "electron-updater": "^6.1.1",
    "execa": "5",
    "express": "^4.18.1",
    "express-unless": "^2.1.2",
    "file-type": "16",
    "formidable": "^2.0.1",
    "helmet": "^6.0.0",
    "http-proxy-middleware": "^2.0.6",
    "lodash": "^4.17.21",
    "nanoid": "3",
    "node-machine-id": "^1.1.12",
    "node-machine-uid": "^1.0.1",
    "semver": "^7.5.4",
    "smpte-timecode": "^1.2.3",
    "sqlite3": "^5.0.11",
    "tail": "^2.2.4",
    "tcp-port-used": "^1.0.2",
    "tiny-typed-emitter": "^2.1.0",
    "uuid": "^9.0.0",
    "valid-url": "^1.0.9",
    "ws": "^8.9.0"
  },
  "overrides": {
    "node-gyp": "9.1.0",
    "nan": "2.16.0",
    "react": "$react",
    "minimatch": "^5.1.0",
    "ws": "$ws"
  },
  "resolutions": {
    "node-gyp": "9.1.0",
    "nan": "2.16.0",
    "react": "^18.2.0",
    "minimatch": "^5.1.0",
    "ws": "^8.9.0"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.6",
    "utf-8-validate": "6"
  }
}
