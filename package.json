{
  "name": "gmib",
  "version": "4.7.1",
  "description": "Nata-Info gmib tool",
  "private": true,
  "engines": {
    "node": "21.2.0",
    "npm": "10.2.3"
  },
  "keywords": [
    "nata-info",
    "nibus",
    "sarakusha"
  ],
  "license": "MIT",
  "author": "Andrei Sarakeev <avs@nata-info.ru>",
  "main": "packages/main/dist/index.cjs",
  "repository": "https://github.com/sarakusha/gmib.git",
  "scripts": {
    "rsync:ubuntu": "rsync -avz --delete --exclude=.git --exclude=packages/preload/*.d.ts --include=.gitignore --include=electron-builder.env --filter=':- .gitignore' . user@192.168.2.40:~/src/gmib",
    "rsync:windows": "rsync --port 8730 -avz --delete --exclude=.git --include=.gitignore --include=electron-builder.env --filter=':- .gitignore' . sarakusha@192.168.2.40:/mnt/c/Users/sarakusha/src/gmib",
    "build": "cross-env MODE=production NODE_ENV=production npm run build:types && cross-env MODE=production NODE_ENV=production run-p build:main build:preload build:renderer",
    "build:main": "cd ./packages/main && vite build",
    "build:preload": "run-p build:preload:*",
    "build:preloadlib": "cd ./packages/preload && vite build",
    "build:preload:gmib": "cross-env LIB_NAME=gmib npm run build:preloadlib",
    "build:preload:remote": "cross-env LIB_NAME=remote npm run build:preloadlib",
    "build:preload:player": "cross-env LIB_NAME=player npm run build:preloadlib",
    "build:types": "run-p build:types:*",
    "build:types:gmib": "dts-cb -i packages/preload/gmib/tsconfig.json -o packages/preload/gmibInMainWorld.d.ts",
    "build:types:player": "dts-cb -i packages/preload/player/tsconfig.json -o packages/preload/playerInMainWorld.d.ts",
    "build:renderer": "cd ./packages/renderer && vite build",
    "compile": "cross-env NODE_ENV=production electron-builder build --config .electron-builder.config.js --dir",
    "test": "run-s test:*",
    "test:main": "vitest run -r packages/main --passWithNoTests",
    "test:preload": "vitest run -r packages/preload --passWithNoTests",
    "test:renderer": "vitest run -r packages/renderer --passWithNoTests",
    "test:e2e": "npm run build && vitest run",
    "test:spelling": "cspell lint -c cspell.json",
    "WATCH:gmib": "cross-env LIB_NAME=gmib node scripts/watch.mjs",
    "watch:player": "cross-env LIB_NAME=player node scripts/watch.mjs",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"packages/{main/src,common,{preload,renderer}/{common,gmib,player},preload/remote}/**/*.{ts,tsx}\" --write",
    "fix:lint": "eslint -c .eslintrc-prod.js packages/{main/src,common,{preload,renderer}/{common,gmib,player},preload/remote} --ext js,ts,tsx,md,mdx --fix",
    "typecheck:main": "tsc --noEmit -p packages/main/tsconfig.json",
    "typecheck:preload": "tsc --noEmit -p packages/preload/tsconfig.json",
    "typecheck:renderer": "tsc --noEmit -p packages/renderer/tsconfig.json",
    "typecheck": "run-p typecheck:*",
    "release": "run-script-os",
    "release:darwin": "electron-builder --config .electron-builder.config.js -p always -m --x64",
    "release:win32": "electron-builder --config .electron-builder.config.js -p always -w --x64",
    "release:linux": "electron-builder --config .electron-builder.config.js -p always -l --x64",
    "dist": "run-script-os",
    "dist:darwin": "cross-env NODE_ENV=production electron-builder --config .electron-builder.config.js -m --x64",
    "dist:win32": "cross-env NODE_ENV=production electron-builder --config .electron-builder.config.js -w --x64",
    "dist:linux": "cross-env NODE_ENV=production electron-builder --config .electron-builder.config.js -l --x64",
    "dist-light": "run-script-os",
    "dist-light:darwin": "cross-env NODE_ENV=production electron-builder --config .electron-builder-light.config.js -m --x64",
    "dist-light:win32": "cross-env NODE_ENV=production electron-builder --config .electron-builder-light.config.js -w --x64",
    "dist-light:linux": "cross-env NODE_ENV=production electron-builder --config .electron-builder-light.config.js -l --x64",
    "download-ffmpeg": "run-script-os",
    "download-ffmpeg:darwin": "mkdirp ffmpeg/darwin-x64 && cd ffmpeg/darwin-x64 && wget https://github.com/mifi/ffmpeg-build-script/releases/latest/download/ffmpeg -O ffmpeg && wget https://github.com/mifi/ffmpeg-build-script/releases/latest/download/ffprobe -O ffprobe && chmod +x ffmpeg && chmod +x ffprobe",
    "download-ffmpeg:linux": "mkdirp ffmpeg/linux-x64 && cd ffmpeg/linux-x64 && wget $(curl https://api.github.com/repos/mifi/ffmpeg-builds/releases/latest | jq -r '.assets[] | select(.browser_download_url | contains(\"linux-x64\")) | .browser_download_url') -nd --no-parent -A 'linux-x64-*.tar.xz' -O ffmpeg.tar.xz && tar xvf ffmpeg.tar.xz --wildcards 'ffmpeg-*-amd64-static/ffmpeg' 'ffmpeg-*-amd64-static/ffprobe' --strip-components=1",
    "download-ffmpeg:win32": "mkdirp ffmpeg/win32-x64 && cd ffmpeg/win32-x64 && npx --yes download-cli https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.7z --out . --filename ffmpeg.7z && 7z x ffmpeg.7z && npx shx --yes mv ffmpeg-*-essentials_build/bin/ffmpeg.exe ./ && npx shx mv ffmpeg-*-essentials_build/bin/ffprobe.exe ./",
    "vite:clean": "rimraf node_modules/.vite && rimraf packages/{main,preload,renderer,playerPreload}/dist/*",
    "postinstall": "electron-builder install-app-deps && cross-env ELECTRON_RUN_AS_NODE=1 npx --no-install electron ./scripts/update-electron-vendors.js",
    "version": "commit-and-tag-version",
    "version:patch": "commit-and-tag-version -r patch",
    "external": "echo 'module.exports = [\"electron\", \"debug\"' > external.js && npm list --omit=dev --depth=3 -p| grep node_modules | sed 's#^.*node_modules/\\(.*\\)$#, \"\\1\"#' | sort | uniq -u >> external.js && echo '];' >> external.js"
  },
  "devDependencies": {
    "@emotion/babel-plugin": "11.11.0",
    "@emotion/react": "11.11.1",
    "@emotion/styled": "11.11.0",
    "@mdx-js/react": "3.0.0",
    "@mdx-js/rollup": "3.0.0",
    "@mui/icons-material": "5.14.16",
    "@mui/lab": "5.0.0-alpha.152",
    "@mui/material": "5.14.17",
    "@mui/x-tree-view": "6.17.0",
    "@reduxjs/toolkit": "1.9.7",
    "@rollup/plugin-commonjs": "25.0.7",
    "@rollup/plugin-node-resolve": "15.2.3",
    "@rollup/plugin-typescript": "11.1.5",
    "@sarakusha/ebml": "file:.yalc/@sarakusha/ebml",
    "@sarakusha/material-ui-chip-input": "2.0.1",
    "@types/color-hash": "1.0.4",
    "@types/cors": "2.8.16",
    "@types/dom-mediacapture-transform": "0.1.9",
    "@types/dom-webcodecs": "0.1.10",
    "@types/express": "4.17.21",
    "@types/formidable": "2.0.6",
    "@types/lodash": "4.14.201",
    "@types/node": "18.18.9",
    "@types/offscreencanvas": "2019.7.3",
    "@types/react": "^18.0.18",
    "@types/react-dom": "^18.0.6",
    "@types/react-virtualized-auto-sizer": "1.0.3",
    "@types/react-window": "1.8.8",
    "@types/sanitize-html": "2.9.4",
    "@types/semver": "7.5.5",
    "@types/sjcl": "1.0.33",
    "@types/smpte-timecode": "1.2.4",
    "@types/sqlite3": "3.1.11",
    "@types/suncalc": "1.9.2",
    "@types/tail": "2.2.3",
    "@types/tcp-port-used": "1.0.4",
    "@types/valid-url": "1.0.7",
    "@types/web": "0.0.119",
    "@types/ws": "8.5.9",
    "@typescript-eslint/eslint-plugin": "6.11.0",
    "@typescript-eslint/parser": "6.11.0",
    "@vitejs/plugin-react": "4.1.1",
    "commit-and-tag-version": "12.0.0",
    "cross-env": "7.0.3",
    "cspell": "8.0.0",
    "dnd-core": "16.0.1",
    "dts-for-context-bridge": "0.7.1",
    "electron": "27.0.4",
    "electron-builder": "24.6.4",
    "electron-devtools-installer": "3.2.0",
    "eslint": "8.53.0",
    "eslint-config-airbnb": "19.0.4",
    "eslint-config-airbnb-typescript": "17.1.0",
    "eslint-config-prettier": "9.0.0",
    "eslint-define-config": "1.24.1",
    "eslint-import-resolver-typescript": "3.6.1",
    "eslint-plugin-import": "2.29.0",
    "eslint-plugin-jsx-a11y": "6.8.0",
    "eslint-plugin-mdx": "2.2.0",
    "eslint-plugin-prettier": "5.0.1",
    "eslint-plugin-react": "7.33.2",
    "eslint-plugin-react-hooks": "4.6.0",
    "eslint-plugin-unused-imports": "3.0.0",
    "formik": "2.4.5",
    "happy-dom": "8.9.0",
    "highcharts": "10.3.3",
    "highcharts-react-official": "3.2.1",
    "hotkeys-js": "3.12.0",
    "iput": "file:.yalc/iput",
    "material-ui-popup-state": "5.0.10",
    "notistack": "2.0.8",
    "npm-run-all": "4.1.5",
    "playwright": "1.39.0",
    "prettier": "3.1.0",
    "prettier-airbnb-config": "1.0.0",
    "react": "18.2.0",
    "react-dnd": "16.0.1",
    "react-dnd-html5-backend": "16.0.1",
    "react-dom": "18.2.0",
    "react-error-boundary": "4.0.11",
    "react-imask": "6.6.3",
    "react-redux": "8.1.3",
    "react-resize-detector": "9.1.0",
    "react-transition-group": "4.4.5",
    "rollup-plugin-cleanup": "3.2.1",
    "rollup-plugin-swc": "0.2.1",
    "rollup-plugin-visualizer": "5.9.2",
    "run-script-os": "1.1.6",
    "suncalc": "1.9.0",
    "typeface-roboto": "1.1.13",
    "typescript": "5.2.2",
    "vite": "4.5.0",
    "vite-plugin-checker": "0.6.2"
  },
  "dependencies": {
    "@homebridge/ciao": "1.1.7",
    "@nibus/core": "4.0.2",
    "@nibus/detection": "4.0.1",
    "@nibus/mibs": "4.0.0",
    "@nibus/service": "4.0.3",
    "@novastar/codec": "2.0.0-alpha.11",
    "@novastar/native": "2.0.0-alpha.11",
    "@novastar/net": "2.0.0-alpha.11",
    "@novastar/screen": "2.0.0-alpha.11",
    "@novastar/serial": "2.0.0-alpha.11",
    "@sarakusha/tssrp6a": "3.0.0",
    "ajv": "8.12.0",
    "body-parser": "1.20.2",
    "bonjour-hap": "3.6.4",
    "color-hash": "2.0.2",
    "cors": "2.8.5",
    "dayjs": "1.11.10",
    "debug": "4.3.4",
    "dotenv": "16.3.1",
    "electron-extension-installer": "1.2.0",
    "electron-log": "4.4.8",
    "electron-store": "8.1.0",
    "electron-updater": "6.1.4",
    "execa": "5.1.1",
    "express": "4.18.2",
    "express-unless": "2.1.3",
    "file-type": "16.5.4",
    "formidable": "2.1.2",
    "helmet": "6.2.0",
    "http-proxy-middleware": "2.0.6",
    "lodash": "4.17.21",
    "nanoid": "3.3.7",
    "node-machine-id": "1.1.12",
    "node-machine-uid": "1.0.2",
    "semver": "7.5.4",
    "smpte-timecode": "1.3.3",
    "sqlite3": "5.1.6",
    "tail": "2.2.6",
    "tcp-port-used": "1.0.2",
    "tiny-typed-emitter": "2.1.0",
    "uuid": "9.0.1",
    "ws": "8.14.2"
  },
  "overrides": {
    "react": "$react",
    "ws": "$ws",
    "prettier": "$prettier"
  },
  "optionalDependencies": {
    "bufferutil": "4.0.8",
    "utf-8-validate": "6.0.3"
  }
}
