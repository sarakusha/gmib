"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NMS_MAX_DATA_LENGTH = exports.MAX_DATA_LENGTH = exports.SERVICE_INFO_LENGTH = exports.PREAMBLE = exports.Offsets = exports.States = void 0;

require("source-map-support/register");

/*
 * @license
 * Copyright (c) 2019. OOO Nata-Info
 * @author Andrei Sarakeev <avs@nata-info.ru>
 *
 * This file is part of the "@nata" project.
 * For the full copyright and license information, please view
 * the EULA file that was distributed with this source code.
 */
let States;
exports.States = States;

(function (States) {
  States[States["PREAMBLE_WAITING"] = 0] = "PREAMBLE_WAITING";
  States[States["HEADER_READING"] = 1] = "HEADER_READING";
  States[States["DATA_READING"] = 2] = "DATA_READING";
})(States || (exports.States = States = {}));

let Offsets;
exports.Offsets = Offsets;

(function (Offsets) {
  Offsets[Offsets["DESTINATION"] = 1] = "DESTINATION";
  Offsets[Offsets["SOURCE"] = 7] = "SOURCE";
  Offsets[Offsets["SERVICE"] = 13] = "SERVICE";
  Offsets[Offsets["LENGTH"] = 14] = "LENGTH";
  Offsets[Offsets["PROTOCOL"] = 15] = "PROTOCOL";
  Offsets[Offsets["DATA"] = 16] = "DATA";
})(Offsets || (exports.Offsets = Offsets = {}));

const PREAMBLE = 0x7E;
exports.PREAMBLE = PREAMBLE;
const SERVICE_INFO_LENGTH = Offsets.DATA;
exports.SERVICE_INFO_LENGTH = SERVICE_INFO_LENGTH;
const MAX_DATA_LENGTH = 238;
exports.MAX_DATA_LENGTH = MAX_DATA_LENGTH;
const NMS_MAX_DATA_LENGTH = 63;
exports.NMS_MAX_DATA_LENGTH = NMS_MAX_DATA_LENGTH;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9uYmNvbnN0LnRzIl0sIm5hbWVzIjpbIlN0YXRlcyIsIk9mZnNldHMiLCJQUkVBTUJMRSIsIlNFUlZJQ0VfSU5GT19MRU5HVEgiLCJEQVRBIiwiTUFYX0RBVEFfTEVOR1RIIiwiTk1TX01BWF9EQVRBX0xFTkdUSCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7OztJQVVZQSxNOzs7V0FBQUEsTTtBQUFBQSxFQUFBQSxNLENBQUFBLE07QUFBQUEsRUFBQUEsTSxDQUFBQSxNO0FBQUFBLEVBQUFBLE0sQ0FBQUEsTTtHQUFBQSxNLHNCQUFBQSxNOztJQU1BQyxPOzs7V0FBQUEsTztBQUFBQSxFQUFBQSxPLENBQUFBLE87QUFBQUEsRUFBQUEsTyxDQUFBQSxPO0FBQUFBLEVBQUFBLE8sQ0FBQUEsTztBQUFBQSxFQUFBQSxPLENBQUFBLE87QUFBQUEsRUFBQUEsTyxDQUFBQSxPO0FBQUFBLEVBQUFBLE8sQ0FBQUEsTztHQUFBQSxPLHVCQUFBQSxPOztBQVNMLE1BQU1DLFFBQVEsR0FBRyxJQUFqQjs7QUFDQSxNQUFNQyxtQkFBbUIsR0FBR0YsT0FBTyxDQUFDRyxJQUFwQzs7QUFDQSxNQUFNQyxlQUFlLEdBQUcsR0FBeEI7O0FBQ0EsTUFBTUMsbUJBQW1CLEdBQUcsRUFBNUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxOS4gT09PIE5hdGEtSW5mb1xuICogQGF1dGhvciBBbmRyZWkgU2FyYWtlZXYgPGF2c0BuYXRhLWluZm8ucnU+XG4gKlxuICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIFwiQG5hdGFcIiBwcm9qZWN0LlxuICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXdcbiAqIHRoZSBFVUxBIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLlxuICovXG5cbmV4cG9ydCBlbnVtIFN0YXRlcyB7XG4gIFBSRUFNQkxFX1dBSVRJTkcgPSAwLFxuICBIRUFERVJfUkVBRElORyA9IDEsXG4gIERBVEFfUkVBRElORyA9IDIsXG59XG5cbmV4cG9ydCBlbnVtIE9mZnNldHMge1xuICBERVNUSU5BVElPTiA9IDEsXG4gIFNPVVJDRSA9IDcsXG4gIFNFUlZJQ0UgPSAxMyxcbiAgTEVOR1RIID0gMTQsXG4gIFBST1RPQ09MID0gMTUsXG4gIERBVEEgPSAxNixcbn1cblxuZXhwb3J0IGNvbnN0IFBSRUFNQkxFID0gMHg3RTtcbmV4cG9ydCBjb25zdCBTRVJWSUNFX0lORk9fTEVOR1RIID0gT2Zmc2V0cy5EQVRBO1xuZXhwb3J0IGNvbnN0IE1BWF9EQVRBX0xFTkdUSCA9IDIzODtcbmV4cG9ydCBjb25zdCBOTVNfTUFYX0RBVEFfTEVOR1RIID0gNjM7XG4iXX0=