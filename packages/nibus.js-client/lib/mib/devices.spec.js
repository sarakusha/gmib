"use strict";

require("source-map-support/register");

var _devices = _interopRequireDefault(require("./devices"));

var _mib2json = require("./mib2json");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * @license
 * Copyright (c) 2019. OOO Nata-Info
 * @author Andrei Sarakeev <avs@nata-info.ru>
 *
 * This file is part of the "@nata" project.
 * For the full copyright and license information, please view
 * the EULA file that was distributed with this source code.
 */
// import 'reflect-metadata';
// import {inspect} from 'util';
describe('Device', () => {
  test('one mib - one prototype', () => {
    const device1 = _devices.default.create('::34:56', 'mcdvi');

    const device2 = _devices.default.create('::11:22', 'mcdvi');

    const device3 = _devices.default.create('::66:77', 'siolynx');

    expect(Reflect.getPrototypeOf(device1)).toBe(Reflect.getPrototypeOf(device2));
    expect(Reflect.getPrototypeOf(device1)).not.toBe(Reflect.getPrototypeOf(device3)); // console.log('json', JSON.stringify(device2));
  });
  test('has version property', () => {
    const device = _devices.default.create('auto', 'siolynx');

    expect(device.getId('2')).toBe(device.getId('version'));
    expect(device.getId('cdata')).toBe(271);
    expect(device.getId(271)).toBe(271);
    expect(device.getId('10f')).toBe(271);
  });
  test('different properties', () => {
    const device1 = _devices.default.create('::34:56', 'mcdvi');

    const device2 = _devices.default.create('::11:22', 'mcdvi');

    device1.brightness = 100;
    device2.brightness = 50;
    expect(device1).toHaveProperty('brightness', 100);
    expect(device1.getRawValue('brightness')).toBe(255);
    expect(device1.isDirty('brightness')).toBe(true);
    expect(device1.isDirty('version')).toBe(false);
    expect(device2).toHaveProperty('brightness', 50);
  });
  test('equal devices', () => {
    const address = 'FF:FE:12:34:56:78';

    const device1 = _devices.default.create(address, 'mcdvi');

    const device2 = _devices.default.create(address, 'mcdvi');

    device1.brightness = 56;
    expect(device2).toHaveProperty('brightness', 56);
    expect(device1).toBe(device2);
  });
  test('countRef', () => {
    const address = 'FF:FE:00:34:56:78';
    const count = Object.keys(_devices.default.get()).length;

    const device1 = _devices.default.create(address, 'mcdvi');

    const device2 = _devices.default.create(address, 'mcdvi');

    expect(_devices.default.get().length).toBe(count + 1);
    device2.release();
    expect(_devices.default.get().length).toBe(count + 1);
    device1.release();
    expect(_devices.default.get().length).toBe(count);
  });
  test('mibs', async () => {
    const mibs = await (0, _mib2json.getMibs)();
    expect(mibs.length).toBeGreaterThanOrEqual(43);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWIvZGV2aWNlcy5zcGVjLnRzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwidGVzdCIsImRldmljZTEiLCJkZXZpY2VzIiwiY3JlYXRlIiwiZGV2aWNlMiIsImRldmljZTMiLCJleHBlY3QiLCJSZWZsZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJ0b0JlIiwibm90IiwiZGV2aWNlIiwiZ2V0SWQiLCJicmlnaHRuZXNzIiwidG9IYXZlUHJvcGVydHkiLCJnZXRSYXdWYWx1ZSIsImlzRGlydHkiLCJhZGRyZXNzIiwiY291bnQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0IiwibGVuZ3RoIiwicmVsZWFzZSIsIm1pYnMiLCJ0b0JlR3JlYXRlclRoYW5PckVxdWFsIl0sIm1hcHBpbmdzIjoiOzs7O0FBV0E7O0FBQ0E7Ozs7QUFaQTs7Ozs7Ozs7O0FBVUE7QUFHQTtBQUVBQSxRQUFRLENBQUMsUUFBRCxFQUFXLE1BQU07QUFDdkJDLEVBQUFBLElBQUksQ0FBQyx5QkFBRCxFQUE0QixNQUFNO0FBQ3BDLFVBQU1DLE9BQU8sR0FBR0MsaUJBQVFDLE1BQVIsQ0FBZSxTQUFmLEVBQTBCLE9BQTFCLENBQWhCOztBQUNBLFVBQU1DLE9BQU8sR0FBR0YsaUJBQVFDLE1BQVIsQ0FBZSxTQUFmLEVBQTBCLE9BQTFCLENBQWhCOztBQUNBLFVBQU1FLE9BQU8sR0FBR0gsaUJBQVFDLE1BQVIsQ0FBZSxTQUFmLEVBQTBCLFNBQTFCLENBQWhCOztBQUNBRyxJQUFBQSxNQUFNLENBQUNDLE9BQU8sQ0FBQ0MsY0FBUixDQUF1QlAsT0FBdkIsQ0FBRCxDQUFOLENBQXdDUSxJQUF4QyxDQUE2Q0YsT0FBTyxDQUFDQyxjQUFSLENBQXVCSixPQUF2QixDQUE3QztBQUNBRSxJQUFBQSxNQUFNLENBQUNDLE9BQU8sQ0FBQ0MsY0FBUixDQUF1QlAsT0FBdkIsQ0FBRCxDQUFOLENBQXdDUyxHQUF4QyxDQUE0Q0QsSUFBNUMsQ0FBaURGLE9BQU8sQ0FBQ0MsY0FBUixDQUF1QkgsT0FBdkIsQ0FBakQsRUFMb0MsQ0FNcEM7QUFDRCxHQVBHLENBQUo7QUFRQUwsRUFBQUEsSUFBSSxDQUFDLHNCQUFELEVBQXlCLE1BQU07QUFDakMsVUFBTVcsTUFBTSxHQUFHVCxpQkFBUUMsTUFBUixDQUFlLE1BQWYsRUFBdUIsU0FBdkIsQ0FBZjs7QUFDQUcsSUFBQUEsTUFBTSxDQUFDSyxNQUFNLENBQUNDLEtBQVAsQ0FBYSxHQUFiLENBQUQsQ0FBTixDQUEwQkgsSUFBMUIsQ0FBK0JFLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhLFNBQWIsQ0FBL0I7QUFDQU4sSUFBQUEsTUFBTSxDQUFDSyxNQUFNLENBQUNDLEtBQVAsQ0FBYSxPQUFiLENBQUQsQ0FBTixDQUE4QkgsSUFBOUIsQ0FBbUMsR0FBbkM7QUFDQUgsSUFBQUEsTUFBTSxDQUFDSyxNQUFNLENBQUNDLEtBQVAsQ0FBYSxHQUFiLENBQUQsQ0FBTixDQUEwQkgsSUFBMUIsQ0FBK0IsR0FBL0I7QUFDQUgsSUFBQUEsTUFBTSxDQUFDSyxNQUFNLENBQUNDLEtBQVAsQ0FBYSxLQUFiLENBQUQsQ0FBTixDQUE0QkgsSUFBNUIsQ0FBaUMsR0FBakM7QUFDRCxHQU5HLENBQUo7QUFPQVQsRUFBQUEsSUFBSSxDQUFDLHNCQUFELEVBQXlCLE1BQU07QUFDakMsVUFBTUMsT0FBTyxHQUFHQyxpQkFBUUMsTUFBUixDQUFlLFNBQWYsRUFBMEIsT0FBMUIsQ0FBaEI7O0FBQ0EsVUFBTUMsT0FBTyxHQUFHRixpQkFBUUMsTUFBUixDQUFlLFNBQWYsRUFBMEIsT0FBMUIsQ0FBaEI7O0FBQ0FGLElBQUFBLE9BQU8sQ0FBQ1ksVUFBUixHQUFxQixHQUFyQjtBQUNBVCxJQUFBQSxPQUFPLENBQUNTLFVBQVIsR0FBcUIsRUFBckI7QUFDQVAsSUFBQUEsTUFBTSxDQUFDTCxPQUFELENBQU4sQ0FBZ0JhLGNBQWhCLENBQStCLFlBQS9CLEVBQTZDLEdBQTdDO0FBQ0FSLElBQUFBLE1BQU0sQ0FBQ0wsT0FBTyxDQUFDYyxXQUFSLENBQW9CLFlBQXBCLENBQUQsQ0FBTixDQUEwQ04sSUFBMUMsQ0FBK0MsR0FBL0M7QUFDQUgsSUFBQUEsTUFBTSxDQUFDTCxPQUFPLENBQUNlLE9BQVIsQ0FBZ0IsWUFBaEIsQ0FBRCxDQUFOLENBQXNDUCxJQUF0QyxDQUEyQyxJQUEzQztBQUNBSCxJQUFBQSxNQUFNLENBQUNMLE9BQU8sQ0FBQ2UsT0FBUixDQUFnQixTQUFoQixDQUFELENBQU4sQ0FBbUNQLElBQW5DLENBQXdDLEtBQXhDO0FBQ0FILElBQUFBLE1BQU0sQ0FBQ0YsT0FBRCxDQUFOLENBQWdCVSxjQUFoQixDQUErQixZQUEvQixFQUE2QyxFQUE3QztBQUNELEdBVkcsQ0FBSjtBQVdBZCxFQUFBQSxJQUFJLENBQUMsZUFBRCxFQUFrQixNQUFNO0FBQzFCLFVBQU1pQixPQUFPLEdBQUcsbUJBQWhCOztBQUNBLFVBQU1oQixPQUFPLEdBQUdDLGlCQUFRQyxNQUFSLENBQWVjLE9BQWYsRUFBd0IsT0FBeEIsQ0FBaEI7O0FBQ0EsVUFBTWIsT0FBTyxHQUFHRixpQkFBUUMsTUFBUixDQUFlYyxPQUFmLEVBQXdCLE9BQXhCLENBQWhCOztBQUNBaEIsSUFBQUEsT0FBTyxDQUFDWSxVQUFSLEdBQXFCLEVBQXJCO0FBQ0FQLElBQUFBLE1BQU0sQ0FBQ0YsT0FBRCxDQUFOLENBQWdCVSxjQUFoQixDQUErQixZQUEvQixFQUE2QyxFQUE3QztBQUNBUixJQUFBQSxNQUFNLENBQUNMLE9BQUQsQ0FBTixDQUFnQlEsSUFBaEIsQ0FBcUJMLE9BQXJCO0FBQ0QsR0FQRyxDQUFKO0FBUUFKLEVBQUFBLElBQUksQ0FBQyxVQUFELEVBQWEsTUFBTTtBQUNyQixVQUFNaUIsT0FBTyxHQUFHLG1CQUFoQjtBQUNBLFVBQU1DLEtBQUssR0FBR0MsTUFBTSxDQUFDQyxJQUFQLENBQVlsQixpQkFBUW1CLEdBQVIsRUFBWixFQUEyQkMsTUFBekM7O0FBQ0EsVUFBTXJCLE9BQU8sR0FBR0MsaUJBQVFDLE1BQVIsQ0FBZWMsT0FBZixFQUF3QixPQUF4QixDQUFoQjs7QUFDQSxVQUFNYixPQUFPLEdBQUdGLGlCQUFRQyxNQUFSLENBQWVjLE9BQWYsRUFBd0IsT0FBeEIsQ0FBaEI7O0FBQ0FYLElBQUFBLE1BQU0sQ0FBQ0osaUJBQVFtQixHQUFSLEdBQWNDLE1BQWYsQ0FBTixDQUE2QmIsSUFBN0IsQ0FBa0NTLEtBQUssR0FBRyxDQUExQztBQUNBZCxJQUFBQSxPQUFPLENBQUNtQixPQUFSO0FBQ0FqQixJQUFBQSxNQUFNLENBQUNKLGlCQUFRbUIsR0FBUixHQUFjQyxNQUFmLENBQU4sQ0FBNkJiLElBQTdCLENBQWtDUyxLQUFLLEdBQUcsQ0FBMUM7QUFDQWpCLElBQUFBLE9BQU8sQ0FBQ3NCLE9BQVI7QUFDQWpCLElBQUFBLE1BQU0sQ0FBQ0osaUJBQVFtQixHQUFSLEdBQWNDLE1BQWYsQ0FBTixDQUE2QmIsSUFBN0IsQ0FBa0NTLEtBQWxDO0FBQ0QsR0FWRyxDQUFKO0FBV0FsQixFQUFBQSxJQUFJLENBQUMsTUFBRCxFQUFTLFlBQVk7QUFDdkIsVUFBTXdCLElBQUksR0FBRyxNQUFNLHdCQUFuQjtBQUNBbEIsSUFBQUEsTUFBTSxDQUFDa0IsSUFBSSxDQUFDRixNQUFOLENBQU4sQ0FBb0JHLHNCQUFwQixDQUEyQyxFQUEzQztBQUNELEdBSEcsQ0FBSjtBQUlELENBbERPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxOS4gT09PIE5hdGEtSW5mb1xuICogQGF1dGhvciBBbmRyZWkgU2FyYWtlZXYgPGF2c0BuYXRhLWluZm8ucnU+XG4gKlxuICogVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIFwiQG5hdGFcIiBwcm9qZWN0LlxuICogRm9yIHRoZSBmdWxsIGNvcHlyaWdodCBhbmQgbGljZW5zZSBpbmZvcm1hdGlvbiwgcGxlYXNlIHZpZXdcbiAqIHRoZSBFVUxBIGZpbGUgdGhhdCB3YXMgZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHNvdXJjZSBjb2RlLlxuICovXG5cbi8vIGltcG9ydCAncmVmbGVjdC1tZXRhZGF0YSc7XG5pbXBvcnQgZGV2aWNlcyBmcm9tICcuL2RldmljZXMnO1xuaW1wb3J0IHsgZ2V0TWlicyB9IGZyb20gJy4vbWliMmpzb24nO1xuLy8gaW1wb3J0IHtpbnNwZWN0fSBmcm9tICd1dGlsJztcblxuZGVzY3JpYmUoJ0RldmljZScsICgpID0+IHtcbiAgdGVzdCgnb25lIG1pYiAtIG9uZSBwcm90b3R5cGUnLCAoKSA9PiB7XG4gICAgY29uc3QgZGV2aWNlMSA9IGRldmljZXMuY3JlYXRlKCc6OjM0OjU2JywgJ21jZHZpJyk7XG4gICAgY29uc3QgZGV2aWNlMiA9IGRldmljZXMuY3JlYXRlKCc6OjExOjIyJywgJ21jZHZpJyk7XG4gICAgY29uc3QgZGV2aWNlMyA9IGRldmljZXMuY3JlYXRlKCc6OjY2Ojc3JywgJ3Npb2x5bngnKTtcbiAgICBleHBlY3QoUmVmbGVjdC5nZXRQcm90b3R5cGVPZihkZXZpY2UxKSkudG9CZShSZWZsZWN0LmdldFByb3RvdHlwZU9mKGRldmljZTIpKTtcbiAgICBleHBlY3QoUmVmbGVjdC5nZXRQcm90b3R5cGVPZihkZXZpY2UxKSkubm90LnRvQmUoUmVmbGVjdC5nZXRQcm90b3R5cGVPZihkZXZpY2UzKSk7XG4gICAgLy8gY29uc29sZS5sb2coJ2pzb24nLCBKU09OLnN0cmluZ2lmeShkZXZpY2UyKSk7XG4gIH0pO1xuICB0ZXN0KCdoYXMgdmVyc2lvbiBwcm9wZXJ0eScsICgpID0+IHtcbiAgICBjb25zdCBkZXZpY2UgPSBkZXZpY2VzLmNyZWF0ZSgnYXV0bycsICdzaW9seW54Jyk7XG4gICAgZXhwZWN0KGRldmljZS5nZXRJZCgnMicpKS50b0JlKGRldmljZS5nZXRJZCgndmVyc2lvbicpKTtcbiAgICBleHBlY3QoZGV2aWNlLmdldElkKCdjZGF0YScpKS50b0JlKDI3MSk7XG4gICAgZXhwZWN0KGRldmljZS5nZXRJZCgyNzEpKS50b0JlKDI3MSk7XG4gICAgZXhwZWN0KGRldmljZS5nZXRJZCgnMTBmJykpLnRvQmUoMjcxKTtcbiAgfSk7XG4gIHRlc3QoJ2RpZmZlcmVudCBwcm9wZXJ0aWVzJywgKCkgPT4ge1xuICAgIGNvbnN0IGRldmljZTEgPSBkZXZpY2VzLmNyZWF0ZSgnOjozNDo1NicsICdtY2R2aScpO1xuICAgIGNvbnN0IGRldmljZTIgPSBkZXZpY2VzLmNyZWF0ZSgnOjoxMToyMicsICdtY2R2aScpO1xuICAgIGRldmljZTEuYnJpZ2h0bmVzcyA9IDEwMDtcbiAgICBkZXZpY2UyLmJyaWdodG5lc3MgPSA1MDtcbiAgICBleHBlY3QoZGV2aWNlMSkudG9IYXZlUHJvcGVydHkoJ2JyaWdodG5lc3MnLCAxMDApO1xuICAgIGV4cGVjdChkZXZpY2UxLmdldFJhd1ZhbHVlKCdicmlnaHRuZXNzJykpLnRvQmUoMjU1KTtcbiAgICBleHBlY3QoZGV2aWNlMS5pc0RpcnR5KCdicmlnaHRuZXNzJykpLnRvQmUodHJ1ZSk7XG4gICAgZXhwZWN0KGRldmljZTEuaXNEaXJ0eSgndmVyc2lvbicpKS50b0JlKGZhbHNlKTtcbiAgICBleHBlY3QoZGV2aWNlMikudG9IYXZlUHJvcGVydHkoJ2JyaWdodG5lc3MnLCA1MCk7XG4gIH0pO1xuICB0ZXN0KCdlcXVhbCBkZXZpY2VzJywgKCkgPT4ge1xuICAgIGNvbnN0IGFkZHJlc3MgPSAnRkY6RkU6MTI6MzQ6NTY6NzgnO1xuICAgIGNvbnN0IGRldmljZTEgPSBkZXZpY2VzLmNyZWF0ZShhZGRyZXNzLCAnbWNkdmknKTtcbiAgICBjb25zdCBkZXZpY2UyID0gZGV2aWNlcy5jcmVhdGUoYWRkcmVzcywgJ21jZHZpJyk7XG4gICAgZGV2aWNlMS5icmlnaHRuZXNzID0gNTY7XG4gICAgZXhwZWN0KGRldmljZTIpLnRvSGF2ZVByb3BlcnR5KCdicmlnaHRuZXNzJywgNTYpO1xuICAgIGV4cGVjdChkZXZpY2UxKS50b0JlKGRldmljZTIpO1xuICB9KTtcbiAgdGVzdCgnY291bnRSZWYnLCAoKSA9PiB7XG4gICAgY29uc3QgYWRkcmVzcyA9ICdGRjpGRTowMDozNDo1Njo3OCc7XG4gICAgY29uc3QgY291bnQgPSBPYmplY3Qua2V5cyhkZXZpY2VzLmdldCgpKS5sZW5ndGg7XG4gICAgY29uc3QgZGV2aWNlMSA9IGRldmljZXMuY3JlYXRlKGFkZHJlc3MsICdtY2R2aScpO1xuICAgIGNvbnN0IGRldmljZTIgPSBkZXZpY2VzLmNyZWF0ZShhZGRyZXNzLCAnbWNkdmknKTtcbiAgICBleHBlY3QoZGV2aWNlcy5nZXQoKS5sZW5ndGgpLnRvQmUoY291bnQgKyAxKTtcbiAgICBkZXZpY2UyLnJlbGVhc2UoKTtcbiAgICBleHBlY3QoZGV2aWNlcy5nZXQoKS5sZW5ndGgpLnRvQmUoY291bnQgKyAxKTtcbiAgICBkZXZpY2UxLnJlbGVhc2UoKTtcbiAgICBleHBlY3QoZGV2aWNlcy5nZXQoKS5sZW5ndGgpLnRvQmUoY291bnQpO1xuICB9KTtcbiAgdGVzdCgnbWlicycsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBtaWJzID0gYXdhaXQgZ2V0TWlicygpO1xuICAgIGV4cGVjdChtaWJzLmxlbmd0aCkudG9CZUdyZWF0ZXJUaGFuT3JFcXVhbCg0Myk7XG4gIH0pO1xufSk7XG4iXX0=