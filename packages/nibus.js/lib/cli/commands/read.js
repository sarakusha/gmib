"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.action = action;
exports.default = void 0;

require("source-map-support/register");

var _handlers = require("../handlers");

async function action(device, args) {
  const idOrName = args.id[0];

  if (idOrName) {
    const id = device.getId(idOrName);
    const value = Object.values((await device.read(id)))[0];
    if (value.error) throw new Error(value.error);
    args.quiet || console.log(JSON.stringify(args.raw ? device.getRawValue(id) : value));
  }
}

const readCommand = {
  command: 'read',
  describe: 'прочитать значение переменной',
  builder: argv => argv.demandOption(['id', 'name', 'mac', 'm']).check(argv => {
    if (Array.isArray(argv.id) && argv.id.length !== 1) {
      throw 'Только одна переменная id за раз';
    }

    return true;
  }),
  handler: (0, _handlers.makeAddressHandler)(action, true)
};
var _default = readCommand;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGkvY29tbWFuZHMvcmVhZC50cyJdLCJuYW1lcyI6WyJhY3Rpb24iLCJkZXZpY2UiLCJhcmdzIiwiaWRPck5hbWUiLCJpZCIsImdldElkIiwidmFsdWUiLCJPYmplY3QiLCJ2YWx1ZXMiLCJyZWFkIiwiZXJyb3IiLCJFcnJvciIsInF1aWV0IiwiY29uc29sZSIsImxvZyIsIkpTT04iLCJzdHJpbmdpZnkiLCJyYXciLCJnZXRSYXdWYWx1ZSIsInJlYWRDb21tYW5kIiwiY29tbWFuZCIsImRlc2NyaWJlIiwiYnVpbGRlciIsImFyZ3YiLCJkZW1hbmRPcHRpb24iLCJjaGVjayIsIkFycmF5IiwiaXNBcnJheSIsImxlbmd0aCIsImhhbmRsZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFhQTs7QUFLTyxlQUFlQSxNQUFmLENBQXNCQyxNQUF0QixFQUF1Q0MsSUFBdkMsRUFBa0U7QUFDdkUsUUFBTUMsUUFBUSxHQUFHRCxJQUFJLENBQUNFLEVBQUwsQ0FBUSxDQUFSLENBQWpCOztBQUNBLE1BQUlELFFBQUosRUFBYztBQUNaLFVBQU1DLEVBQUUsR0FBR0gsTUFBTSxDQUFDSSxLQUFQLENBQWFGLFFBQWIsQ0FBWDtBQUNBLFVBQU1HLEtBQUssR0FBR0MsTUFBTSxDQUFDQyxNQUFQLEVBQWMsTUFBTVAsTUFBTSxDQUFDUSxJQUFQLENBQVlMLEVBQVosQ0FBcEIsR0FBcUMsQ0FBckMsQ0FBZDtBQUNBLFFBQUlFLEtBQUssQ0FBQ0ksS0FBVixFQUFpQixNQUFNLElBQUlDLEtBQUosQ0FBVUwsS0FBSyxDQUFDSSxLQUFoQixDQUFOO0FBQ2pCUixJQUFBQSxJQUFJLENBQUNVLEtBQUwsSUFBY0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQUksQ0FBQ0MsU0FBTCxDQUFlZCxJQUFJLENBQUNlLEdBQUwsR0FBV2hCLE1BQU0sQ0FBQ2lCLFdBQVAsQ0FBbUJkLEVBQW5CLENBQVgsR0FBb0NFLEtBQW5ELENBQVosQ0FBZDtBQUNEO0FBQ0Y7O0FBRUQsTUFBTWEsV0FBZ0QsR0FBRztBQUN2REMsRUFBQUEsT0FBTyxFQUFFLE1BRDhDO0FBRXZEQyxFQUFBQSxRQUFRLEVBQUUsK0JBRjZDO0FBR3ZEQyxFQUFBQSxPQUFPLEVBQUVDLElBQUksSUFBSUEsSUFBSSxDQUNsQkMsWUFEYyxDQUNELENBQUMsSUFBRCxFQUFPLE1BQVAsRUFBZSxLQUFmLEVBQXNCLEdBQXRCLENBREMsRUFFZEMsS0FGYyxDQUVQRixJQUFELElBQVU7QUFDZixRQUFJRyxLQUFLLENBQUNDLE9BQU4sQ0FBY0osSUFBSSxDQUFDbkIsRUFBbkIsS0FBMEJtQixJQUFJLENBQUNuQixFQUFMLENBQVF3QixNQUFSLEtBQW1CLENBQWpELEVBQW9EO0FBQ2xELFlBQU0sa0NBQU47QUFDRDs7QUFDRCxXQUFPLElBQVA7QUFDRCxHQVBjLENBSHNDO0FBV3ZEQyxFQUFBQSxPQUFPLEVBQUUsa0NBQW1CN0IsTUFBbkIsRUFBMkIsSUFBM0I7QUFYOEMsQ0FBekQ7ZUFjZW1CLFciLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxOS4gTmF0YS1JbmZvXG4gKiBAYXV0aG9yIEFuZHJlaSBTYXJha2VldiA8YXZzQG5hdGEtaW5mby5ydT5cbiAqXG4gKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgXCJAbmF0YVwiIHByb2plY3QuXG4gKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2Ugdmlld1xuICogdGhlIEVVTEEgZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuXG4gKi9cblxuaW1wb3J0IHsgQXJndW1lbnRzLCBDb21tYW5kTW9kdWxlLCBEZWZpbmVkIH0gZnJvbSAneWFyZ3MnO1xuXG5pbXBvcnQgeyBJRGV2aWNlIH0gZnJvbSAnQG5hdGEvbmlidXMuanMtY2xpZW50L2xpYi9taWInO1xuaW1wb3J0IHsgbWFrZUFkZHJlc3NIYW5kbGVyIH0gZnJvbSAnLi4vaGFuZGxlcnMnO1xuaW1wb3J0IHsgQ29tbW9uT3B0cyB9IGZyb20gJy4uL29wdGlvbnMnO1xuXG50eXBlIFJlYWRPcHRzID0gRGVmaW5lZDxDb21tb25PcHRzLCAnaWQnIHwgJ25hbWUnIHwgJ20nIHwgJ21hYyc+O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYWN0aW9uKGRldmljZTogSURldmljZSwgYXJnczogQXJndW1lbnRzPFJlYWRPcHRzPikge1xuICBjb25zdCBpZE9yTmFtZSA9IGFyZ3MuaWRbMF07XG4gIGlmIChpZE9yTmFtZSkge1xuICAgIGNvbnN0IGlkID0gZGV2aWNlLmdldElkKGlkT3JOYW1lKTtcbiAgICBjb25zdCB2YWx1ZSA9IE9iamVjdC52YWx1ZXMoYXdhaXQgZGV2aWNlLnJlYWQoaWQpKVswXTtcbiAgICBpZiAodmFsdWUuZXJyb3IpIHRocm93IG5ldyBFcnJvcih2YWx1ZS5lcnJvcik7XG4gICAgYXJncy5xdWlldCB8fCBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShhcmdzLnJhdyA/IGRldmljZS5nZXRSYXdWYWx1ZShpZCkgOiB2YWx1ZSkpO1xuICB9XG59XG5cbmNvbnN0IHJlYWRDb21tYW5kOiBDb21tYW5kTW9kdWxlPENvbW1vbk9wdHMsIFJlYWRPcHRzPiA9IHtcbiAgY29tbWFuZDogJ3JlYWQnLFxuICBkZXNjcmliZTogJ9C/0YDQvtGH0LjRgtCw0YLRjCDQt9C90LDRh9C10L3QuNC1INC/0LXRgNC10LzQtdC90L3QvtC5JyxcbiAgYnVpbGRlcjogYXJndiA9PiBhcmd2XG4gICAgLmRlbWFuZE9wdGlvbihbJ2lkJywgJ25hbWUnLCAnbWFjJywgJ20nXSlcbiAgICAuY2hlY2soKGFyZ3YpID0+IHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KGFyZ3YuaWQpICYmIGFyZ3YuaWQubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgIHRocm93ICfQotC+0LvRjNC60L4g0L7QtNC90LAg0L/QtdGA0LXQvNC10L3QvdCw0Y8gaWQg0LfQsCDRgNCw0LcnO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSksXG4gIGhhbmRsZXI6IG1ha2VBZGRyZXNzSGFuZGxlcihhY3Rpb24sIHRydWUpLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgcmVhZENvbW1hbmQ7XG4iXX0=