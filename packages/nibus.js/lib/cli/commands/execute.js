"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _handlers = require("../handlers");

async function action(device, args) {
  const vars = args._.slice(1).map(arg => arg.split('=', 2)).filter(([name, value]) => name !== '' && value !== '');

  const opts = vars.reduce((res, [name, value]) => {
    res[name] = value;
    return res;
  }, {});
  await device.execute(args.program, opts);
}

const executeCommand = {
  command: 'execute <program>',
  aliases: 'exec',
  describe: 'выполнить подпрограмму',
  builder: argv => argv.positional('program', {
    describe: 'название подпрограммы',
    type: 'string'
  }).example('$0 execute signal duration=30 source=1 -m 45:33', 'выполнить программу signal с' + ' параметрами duration и source').demandOption(['mac', 'm', 'program']),
  handler: (0, _handlers.makeAddressHandler)(action, true)
};
var _default = executeCommand;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGkvY29tbWFuZHMvZXhlY3V0ZS50cyJdLCJuYW1lcyI6WyJhY3Rpb24iLCJkZXZpY2UiLCJhcmdzIiwidmFycyIsIl8iLCJzbGljZSIsIm1hcCIsImFyZyIsInNwbGl0IiwiZmlsdGVyIiwibmFtZSIsInZhbHVlIiwib3B0cyIsInJlZHVjZSIsInJlcyIsImV4ZWN1dGUiLCJwcm9ncmFtIiwiZXhlY3V0ZUNvbW1hbmQiLCJjb21tYW5kIiwiYWxpYXNlcyIsImRlc2NyaWJlIiwiYnVpbGRlciIsImFyZ3YiLCJwb3NpdGlvbmFsIiwidHlwZSIsImV4YW1wbGUiLCJkZW1hbmRPcHRpb24iLCJoYW5kbGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFhQTs7QUFTQSxlQUFlQSxNQUFmLENBQXNCQyxNQUF0QixFQUF1Q0MsSUFBdkMsRUFBcUU7QUFDbkUsUUFBTUMsSUFBaUIsR0FBR0QsSUFBSSxDQUFDRSxDQUFMLENBQ3ZCQyxLQUR1QixDQUNqQixDQURpQixFQUV2QkMsR0FGdUIsQ0FFbkJDLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxLQUFKLENBQVUsR0FBVixFQUFlLENBQWYsQ0FGWSxFQUd2QkMsTUFIdUIsQ0FHaEIsQ0FBQyxDQUFDQyxJQUFELEVBQU9DLEtBQVAsQ0FBRCxLQUFtQkQsSUFBSSxLQUFLLEVBQVQsSUFBZUMsS0FBSyxLQUFLLEVBSDVCLENBQTFCOztBQUtBLFFBQU1DLElBQUksR0FBR1QsSUFBSSxDQUFDVSxNQUFMLENBQVksQ0FBQ0MsR0FBRCxFQUFNLENBQUNKLElBQUQsRUFBT0MsS0FBUCxDQUFOLEtBQXdCO0FBQy9DRyxJQUFBQSxHQUFHLENBQUNKLElBQUQsQ0FBSCxHQUFZQyxLQUFaO0FBQ0EsV0FBT0csR0FBUDtBQUNELEdBSFksRUFHVixFQUhVLENBQWI7QUFLQSxRQUFNYixNQUFNLENBQUNjLE9BQVAsQ0FBZWIsSUFBSSxDQUFDYyxPQUFwQixFQUE2QkosSUFBN0IsQ0FBTjtBQUNEOztBQUVELE1BQU1LLGNBQXNELEdBQUc7QUFDN0RDLEVBQUFBLE9BQU8sRUFBRSxtQkFEb0Q7QUFFN0RDLEVBQUFBLE9BQU8sRUFBRSxNQUZvRDtBQUc3REMsRUFBQUEsUUFBUSxFQUFFLHdCQUhtRDtBQUk3REMsRUFBQUEsT0FBTyxFQUFFQyxJQUFJLElBQUlBLElBQUksQ0FDbEJDLFVBRGMsQ0FDSCxTQURHLEVBQ1E7QUFDckJILElBQUFBLFFBQVEsRUFBRSx1QkFEVztBQUVyQkksSUFBQUEsSUFBSSxFQUFFO0FBRmUsR0FEUixFQUtkQyxPQUxjLENBS04saURBTE0sRUFLNkMsaUNBQzFELGdDQU5hLEVBT2RDLFlBUGMsQ0FPRCxDQUFDLEtBQUQsRUFBUSxHQUFSLEVBQWEsU0FBYixDQVBDLENBSjRDO0FBWTdEQyxFQUFBQSxPQUFPLEVBQUUsa0NBQW1CM0IsTUFBbkIsRUFBMkIsSUFBM0I7QUFab0QsQ0FBL0Q7ZUFlZWlCLGMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxOS4gTmF0YS1JbmZvXG4gKiBAYXV0aG9yIEFuZHJlaSBTYXJha2VldiA8YXZzQG5hdGEtaW5mby5ydT5cbiAqXG4gKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgXCJAbmF0YVwiIHByb2plY3QuXG4gKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2Ugdmlld1xuICogdGhlIEVVTEEgZmlsZSB0aGF0IHdhcyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgc291cmNlIGNvZGUuXG4gKi9cblxuaW1wb3J0IHsgQXJndW1lbnRzLCBDb21tYW5kTW9kdWxlLCBEZWZpbmVkIH0gZnJvbSAneWFyZ3MnO1xuXG5pbXBvcnQgeyBJRGV2aWNlIH0gZnJvbSAnQG5hdGEvbmlidXMuanMtY2xpZW50L2xpYi9taWInO1xuaW1wb3J0IHsgbWFrZUFkZHJlc3NIYW5kbGVyIH0gZnJvbSAnLi4vaGFuZGxlcnMnO1xuaW1wb3J0IHsgQ29tbW9uT3B0cyB9IGZyb20gJy4uL29wdGlvbnMnO1xuXG50eXBlIEV4ZWN1dGVPcHRzID0gRGVmaW5lZDxDb21tb25PcHRzLCAnbScgfCAnbWFjJz4gJiB7XG4gIHByb2dyYW06IHN0cmluZyxcbn07XG5cbnR5cGUgTmFtZVZhbHVlID0gW3N0cmluZywgc3RyaW5nXTtcblxuYXN5bmMgZnVuY3Rpb24gYWN0aW9uKGRldmljZTogSURldmljZSwgYXJnczogQXJndW1lbnRzPEV4ZWN1dGVPcHRzPikge1xuICBjb25zdCB2YXJzOiBOYW1lVmFsdWVbXSA9IGFyZ3MuX1xuICAgIC5zbGljZSgxKVxuICAgIC5tYXAoYXJnID0+IGFyZy5zcGxpdCgnPScsIDIpIGFzIE5hbWVWYWx1ZSlcbiAgICAuZmlsdGVyKChbbmFtZSwgdmFsdWVdKSA9PiBuYW1lICE9PSAnJyAmJiB2YWx1ZSAhPT0gJycpO1xuXG4gIGNvbnN0IG9wdHMgPSB2YXJzLnJlZHVjZSgocmVzLCBbbmFtZSwgdmFsdWVdKSA9PiB7XG4gICAgcmVzW25hbWVdID0gdmFsdWU7XG4gICAgcmV0dXJuIHJlcztcbiAgfSwge30gYXMgUmVjb3JkPHN0cmluZywgc3RyaW5nPik7XG5cbiAgYXdhaXQgZGV2aWNlLmV4ZWN1dGUoYXJncy5wcm9ncmFtLCBvcHRzKTtcbn1cblxuY29uc3QgZXhlY3V0ZUNvbW1hbmQ6IENvbW1hbmRNb2R1bGU8Q29tbW9uT3B0cywgRXhlY3V0ZU9wdHM+ID0ge1xuICBjb21tYW5kOiAnZXhlY3V0ZSA8cHJvZ3JhbT4nLFxuICBhbGlhc2VzOiAnZXhlYycsXG4gIGRlc2NyaWJlOiAn0LLRi9C/0L7Qu9C90LjRgtGMINC/0L7QtNC/0YDQvtCz0YDQsNC80LzRgycsXG4gIGJ1aWxkZXI6IGFyZ3YgPT4gYXJndlxuICAgIC5wb3NpdGlvbmFsKCdwcm9ncmFtJywge1xuICAgICAgZGVzY3JpYmU6ICfQvdCw0LfQstCw0L3QuNC1INC/0L7QtNC/0YDQvtCz0YDQsNC80LzRiycsXG4gICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICB9KVxuICAgIC5leGFtcGxlKCckMCBleGVjdXRlIHNpZ25hbCBkdXJhdGlvbj0zMCBzb3VyY2U9MSAtbSA0NTozMycsICfQstGL0L/QvtC70L3QuNGC0Ywg0L/RgNC+0LPRgNCw0LzQvNGDIHNpZ25hbCDRgScgK1xuICAgICAgJyDQv9Cw0YDQsNC80LXRgtGA0LDQvNC4IGR1cmF0aW9uINC4IHNvdXJjZScpXG4gICAgLmRlbWFuZE9wdGlvbihbJ21hYycsICdtJywgJ3Byb2dyYW0nXSksXG4gIGhhbmRsZXI6IG1ha2VBZGRyZXNzSGFuZGxlcihhY3Rpb24sIHRydWUpLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgZXhlY3V0ZUNvbW1hbmQ7XG4iXX0=