"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.action = action;
exports.default = void 0;

require("source-map-support/register");

var _handlers = require("../handlers");

async function action(device, args) {
  const vars = args._.slice(1).map(arg => arg.split('=', 2)).filter(([name, value]) => name !== '' && value !== '').map(([name, value]) => [device.getName(name), device.getId(name), value]);

  vars.forEach(([name,, value]) => {
    device[name] = value;
  });

  if (vars.length === 0) {
    return;
  }

  args.quiet || console.log(`Writing to ${Reflect.getMetadata('mib', device)} [${device.address}]`);
  return device.write(...vars.map(([, id]) => id)).then(ids => {
    if (args.quiet) return;
    ids.map(id => device.getName(id)).forEach(name => console.log(` - ${name} = ${JSON.stringify(device[name])}`));
  });
}

const writeCommand = {
  command: 'write',
  describe: 'запись переменных в устройство',
  builder: argv => argv.demandOption(['mac', 'm']).example('$0 write -m ::ab:cd hofs=100 vofs=300 brightness=34', `записать в переменные: hofs<-100, vofs<-300, brightness<-34 на устройстве с адресом ::ab:cd
      mib указывать не обязательно, если у устройства есть firmware_version`),
  handler: (0, _handlers.makeAddressHandler)(action, true)
};
var _default = writeCommand;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jbGkvY29tbWFuZHMvd3JpdGUudHMiXSwibmFtZXMiOlsiYWN0aW9uIiwiZGV2aWNlIiwiYXJncyIsInZhcnMiLCJfIiwic2xpY2UiLCJtYXAiLCJhcmciLCJzcGxpdCIsImZpbHRlciIsIm5hbWUiLCJ2YWx1ZSIsImdldE5hbWUiLCJnZXRJZCIsImZvckVhY2giLCJsZW5ndGgiLCJxdWlldCIsImNvbnNvbGUiLCJsb2ciLCJSZWZsZWN0IiwiZ2V0TWV0YWRhdGEiLCJhZGRyZXNzIiwid3JpdGUiLCJpZCIsInRoZW4iLCJpZHMiLCJKU09OIiwic3RyaW5naWZ5Iiwid3JpdGVDb21tYW5kIiwiY29tbWFuZCIsImRlc2NyaWJlIiwiYnVpbGRlciIsImFyZ3YiLCJkZW1hbmRPcHRpb24iLCJleGFtcGxlIiwiaGFuZGxlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQWFBOztBQU9PLGVBQWVBLE1BQWYsQ0FBc0JDLE1BQXRCLEVBQXVDQyxJQUF2QyxFQUFtRTtBQUN4RSxRQUFNQyxJQUFtQixHQUFHRCxJQUFJLENBQUNFLENBQUwsQ0FDekJDLEtBRHlCLENBQ25CLENBRG1CLEVBRXpCQyxHQUZ5QixDQUVyQkMsR0FBRyxJQUFJQSxHQUFHLENBQUNDLEtBQUosQ0FBVSxHQUFWLEVBQWUsQ0FBZixDQUZjLEVBR3pCQyxNQUh5QixDQUdsQixDQUFDLENBQUNDLElBQUQsRUFBT0MsS0FBUCxDQUFELEtBQW1CRCxJQUFJLEtBQUssRUFBVCxJQUFlQyxLQUFLLEtBQUssRUFIMUIsRUFJekJMLEdBSnlCLENBSXJCLENBQUMsQ0FBQ0ksSUFBRCxFQUFPQyxLQUFQLENBQUQsS0FBbUIsQ0FBQ1YsTUFBTSxDQUFDVyxPQUFQLENBQWVGLElBQWYsQ0FBRCxFQUF1QlQsTUFBTSxDQUFDWSxLQUFQLENBQWFILElBQWIsQ0FBdkIsRUFBMkNDLEtBQTNDLENBSkUsQ0FBNUI7O0FBS0FSLEVBQUFBLElBQUksQ0FBQ1csT0FBTCxDQUFhLENBQUMsQ0FBQ0osSUFBRCxHQUFTQyxLQUFULENBQUQsS0FBcUI7QUFDaENWLElBQUFBLE1BQU0sQ0FBQ1MsSUFBRCxDQUFOLEdBQWVDLEtBQWY7QUFDRCxHQUZEOztBQUdBLE1BQUlSLElBQUksQ0FBQ1ksTUFBTCxLQUFnQixDQUFwQixFQUF1QjtBQUNyQjtBQUNEOztBQUNEYixFQUFBQSxJQUFJLENBQUNjLEtBQUwsSUFBY0MsT0FBTyxDQUFDQyxHQUFSLENBQWEsY0FBYUMsT0FBTyxDQUFDQyxXQUFSLENBQW9CLEtBQXBCLEVBQTJCbkIsTUFBM0IsQ0FBbUMsS0FBSUEsTUFBTSxDQUFDb0IsT0FBUSxHQUFoRixDQUFkO0FBQ0EsU0FBT3BCLE1BQU0sQ0FBQ3FCLEtBQVAsQ0FBYSxHQUFHbkIsSUFBSSxDQUFDRyxHQUFMLENBQVMsQ0FBQyxHQUFHaUIsRUFBSCxDQUFELEtBQVlBLEVBQXJCLENBQWhCLEVBQTBDQyxJQUExQyxDQUFnREMsR0FBRCxJQUFTO0FBQzdELFFBQUl2QixJQUFJLENBQUNjLEtBQVQsRUFBZ0I7QUFDaEJTLElBQUFBLEdBQUcsQ0FBQ25CLEdBQUosQ0FBUWlCLEVBQUUsSUFBSXRCLE1BQU0sQ0FBQ1csT0FBUCxDQUFlVyxFQUFmLENBQWQsRUFDR1QsT0FESCxDQUNXSixJQUFJLElBQUlPLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLE1BQUtSLElBQUssTUFBS2dCLElBQUksQ0FBQ0MsU0FBTCxDQUFlMUIsTUFBTSxDQUFDUyxJQUFELENBQXJCLENBQTZCLEVBQXpELENBRG5CO0FBRUQsR0FKTSxDQUFQO0FBS0Q7O0FBRUQsTUFBTWtCLFlBQWtELEdBQUc7QUFDekRDLEVBQUFBLE9BQU8sRUFBRSxPQURnRDtBQUV6REMsRUFBQUEsUUFBUSxFQUFFLGdDQUYrQztBQUd6REMsRUFBQUEsT0FBTyxFQUFFQyxJQUFJLElBQUlBLElBQUksQ0FDbEJDLFlBRGMsQ0FDRCxDQUFDLEtBQUQsRUFBUSxHQUFSLENBREMsRUFFZEMsT0FGYyxDQUdiLHFEQUhhLEVBSVo7NEVBSlksQ0FId0M7QUFVekRDLEVBQUFBLE9BQU8sRUFBRSxrQ0FBbUJuQyxNQUFuQixFQUEyQixJQUEzQjtBQVZnRCxDQUEzRDtlQWFlNEIsWSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE5LiBOYXRhLUluZm9cbiAqIEBhdXRob3IgQW5kcmVpIFNhcmFrZWV2IDxhdnNAbmF0YS1pbmZvLnJ1PlxuICpcbiAqIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBcIkBuYXRhXCIgcHJvamVjdC5cbiAqIEZvciB0aGUgZnVsbCBjb3B5cmlnaHQgYW5kIGxpY2Vuc2UgaW5mb3JtYXRpb24sIHBsZWFzZSB2aWV3XG4gKiB0aGUgRVVMQSBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS5cbiAqL1xuXG5pbXBvcnQgeyBBcmd1bWVudHMsIENvbW1hbmRNb2R1bGUsIERlZmluZWQgfSBmcm9tICd5YXJncyc7XG5cbmltcG9ydCB7IElEZXZpY2UgfSBmcm9tICdAbmF0YS9uaWJ1cy5qcy1jbGllbnQvbGliL21pYic7XG5pbXBvcnQgeyBtYWtlQWRkcmVzc0hhbmRsZXIgfSBmcm9tICcuLi9oYW5kbGVycyc7XG5pbXBvcnQgeyBDb21tb25PcHRzIH0gZnJvbSAnLi4vb3B0aW9ucyc7XG5cbnR5cGUgV3JpdGVPcHRzID0gRGVmaW5lZDxDb21tb25PcHRzLCAnbWFjJyB8ICdtJz47XG5cbnR5cGUgTmFtZUlkVmFsdWUgPSBbc3RyaW5nLCBudW1iZXIsIHN0cmluZ107XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhY3Rpb24oZGV2aWNlOiBJRGV2aWNlLCBhcmdzOiBBcmd1bWVudHM8V3JpdGVPcHRzPikge1xuICBjb25zdCB2YXJzOiBOYW1lSWRWYWx1ZVtdID0gYXJncy5fXG4gICAgLnNsaWNlKDEpXG4gICAgLm1hcChhcmcgPT4gYXJnLnNwbGl0KCc9JywgMikpXG4gICAgLmZpbHRlcigoW25hbWUsIHZhbHVlXSkgPT4gbmFtZSAhPT0gJycgJiYgdmFsdWUgIT09ICcnKVxuICAgIC5tYXAoKFtuYW1lLCB2YWx1ZV0pID0+IFtkZXZpY2UuZ2V0TmFtZShuYW1lKSwgZGV2aWNlLmdldElkKG5hbWUpLCB2YWx1ZV0gYXMgTmFtZUlkVmFsdWUpO1xuICB2YXJzLmZvckVhY2goKFtuYW1lLCAsIHZhbHVlXSkgPT4ge1xuICAgIGRldmljZVtuYW1lXSA9IHZhbHVlO1xuICB9KTtcbiAgaWYgKHZhcnMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGFyZ3MucXVpZXQgfHwgY29uc29sZS5sb2coYFdyaXRpbmcgdG8gJHtSZWZsZWN0LmdldE1ldGFkYXRhKCdtaWInLCBkZXZpY2UpfSBbJHtkZXZpY2UuYWRkcmVzc31dYCk7XG4gIHJldHVybiBkZXZpY2Uud3JpdGUoLi4udmFycy5tYXAoKFssIGlkXSkgPT4gaWQpKS50aGVuKChpZHMpID0+IHtcbiAgICBpZiAoYXJncy5xdWlldCkgcmV0dXJuO1xuICAgIGlkcy5tYXAoaWQgPT4gZGV2aWNlLmdldE5hbWUoaWQpKVxuICAgICAgLmZvckVhY2gobmFtZSA9PiBjb25zb2xlLmxvZyhgIC0gJHtuYW1lfSA9ICR7SlNPTi5zdHJpbmdpZnkoZGV2aWNlW25hbWVdKX1gKSk7XG4gIH0pO1xufVxuXG5jb25zdCB3cml0ZUNvbW1hbmQ6IENvbW1hbmRNb2R1bGU8Q29tbW9uT3B0cywgV3JpdGVPcHRzPiA9IHtcbiAgY29tbWFuZDogJ3dyaXRlJyxcbiAgZGVzY3JpYmU6ICfQt9Cw0L/QuNGB0Ywg0L/QtdGA0LXQvNC10L3QvdGL0YUg0LIg0YPRgdGC0YDQvtC50YHRgtCy0L4nLFxuICBidWlsZGVyOiBhcmd2ID0+IGFyZ3ZcbiAgICAuZGVtYW5kT3B0aW9uKFsnbWFjJywgJ20nXSlcbiAgICAuZXhhbXBsZShcbiAgICAgICckMCB3cml0ZSAtbSA6OmFiOmNkIGhvZnM9MTAwIHZvZnM9MzAwIGJyaWdodG5lc3M9MzQnLFxuICAgICAgYNC30LDQv9C40YHQsNGC0Ywg0LIg0L/QtdGA0LXQvNC10L3QvdGL0LU6IGhvZnM8LTEwMCwgdm9mczwtMzAwLCBicmlnaHRuZXNzPC0zNCDQvdCwINGD0YHRgtGA0L7QudGB0YLQstC1INGBINCw0LTRgNC10YHQvtC8IDo6YWI6Y2RcbiAgICAgIG1pYiDRg9C60LDQt9GL0LLQsNGC0Ywg0L3QtSDQvtCx0Y/Qt9Cw0YLQtdC70YzQvdC+LCDQtdGB0LvQuCDRgyDRg9GB0YLRgNC+0LnRgdGC0LLQsCDQtdGB0YLRjCBmaXJtd2FyZV92ZXJzaW9uYCxcbiAgICApLFxuICBoYW5kbGVyOiBtYWtlQWRkcmVzc0hhbmRsZXIoYWN0aW9uLCB0cnVlKSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHdyaXRlQ29tbWFuZDtcbiJdfQ==